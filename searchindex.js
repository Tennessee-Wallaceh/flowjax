Search.setIndex({"docnames": ["api/bijections", "api/distributions", "api/flows", "api/training", "examples/bounded", "examples/conditional", "examples/unconditional", "examples/variational_inference", "faq", "index"], "filenames": ["api/bijections.rst", "api/distributions.rst", "api/flows.rst", "api/training.rst", "examples/bounded.ipynb", "examples/conditional.ipynb", "examples/unconditional.ipynb", "examples/variational_inference.ipynb", "faq.rst", "index.rst"], "titles": ["Bijections", "Distributions", "Flows", "Training", "Bounded flows", "Conditional density estimation", "Unconditional density estmation", "Variational inference", "FAQ", "FlowJax"], "terms": {"from": [0, 1, 2, 3, 4, 5, 6, 7, 8], "flowjax": [0, 1, 2, 3, 4, 5, 6, 7, 8], "class": [0, 1, 2], "arg": [0, 1, 2], "kwarg": [0, 1, 2, 7], "sourc": [0, 1, 2, 3], "base": [0, 1, 2, 6, 8], "modul": [0, 1], "similar": 0, "distribut": [0, 2, 3, 4, 5, 6, 7, 8, 9], "have": [0, 1, 6], "shape": [0, 1, 4, 5, 6, 7], "cond_shap": [0, 1], "attribut": [0, 1], "To": [0, 8], "allow": 0, "easi": 0, "compos": 0, "all": [0, 1, 5], "support": [0, 1, 4, 5], "pass": [0, 1], "condit": [0, 1, 2, 3, 9], "variabl": [0, 1, 2, 3, 5], "even": 0, "ignor": [0, 1, 3], "The": [0, 1, 2, 3, 4, 7, 8], "method": [0, 1, 2, 7, 8], "do": [0, 1, 4], "gener": [0, 1, 4, 5, 6, 7, 8], "addit": [0, 1], "batch": [0, 1, 3, 8], "dimens": [0, 1, 2], "howev": 0, "jax": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "vmap": [0, 4, 7, 8], "eqx": [0, 3, 8], "filter_vmap": 0, "can": [0, 4, 5, 6, 7, 8], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8], "specif": 0, "desir": 0, "explicitli": [0, 4], "vectoris": 0, "ar": [0, 1, 3, 5, 8], "regist": [0, 1], "pytre": [0, 1, 3], "thei": [0, 1], "equinox": [0, 1, 3, 8], "so": [0, 1, 4], "compat": [0, 1], "normal": [0, 1, 4, 5, 6, 7], "oper": [0, 1], "implement": [0, 1], "inherit": [0, 1], "defin": [0, 1, 6, 7, 8], "A": [0, 2], "none": [0, 1, 2, 3, 7], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9], "repres": 0, "uncondit": [0, 1, 9], "abstract": 0, "transform": [0, 1, 2, 4, 6, 7, 8], "transform_and_log_det": 0, "invers": [0, 1, 2, 4, 8], "inverse_and_log_det": 0, "These": 0, "should": [0, 1, 3, 8], "act": 0, "input": [0, 1, 2], "x": [0, 1, 3, 4, 5, 6, 7, 8], "appli": 0, "comput": [0, 7], "log": [0, 1, 3], "absolut": [0, 2], "valu": [0, 1, 2, 3], "jacobian": 0, "determin": 0, "y": [0, 7], "invert": [0, 2, 4, 7, 8], "__init__": [0, 1, 2], "affin": [0, 1, 2, 4, 6, 7, 8], "elementwis": [0, 2], "b": [0, 4], "loc": [0, 1, 4], "scale": [0, 1, 4, 8], "broadcast": [0, 1], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8], "paramet": [0, 1, 2, 3, 4], "arraylik": [0, 3], "locat": [0, 1], "default": [0, 1, 2, 3, 8], "log_scal": 0, "properti": [0, 1], "triangularaffin": 0, "form": [0, 1, 4, 8], "ax": [0, 4, 6, 7], "where": [0, 2, 4, 5], "lower": [0, 2, 7], "upper": [0, 5], "triangular": [0, 2], "matrix": [0, 7], "arr": 0, "true": [0, 1, 2, 3, 4, 6, 7], "weight_normalis": 0, "fals": [0, 2, 3, 7, 8], "arrai": [0, 1, 3, 4, 5, 6], "bool": [0, 2, 3], "whether": [0, 2, 3], "mask": [0, 2], "select": 0, "other": [0, 5, 6], "element": 0, "weight_log_scal": 0, "If": [0, 3], "provid": [0, 3, 8], "carri": [0, 8], "out": [0, 8], "weight": [0, 2], "normalis": [0, 2, 5, 9], "diag_idx": 0, "tri_mask": 0, "get": 0, "min_diag": 0, "constraint": [0, 1], "blockautoregressivenetwork": 0, "block": [0, 2], "autoregress": [0, 2], "network": [0, 2], "http": [0, 1, 2], "arxiv": [0, 2], "org": [0, 1, 2], "ab": [0, 2], "1904": [0, 2], "04676": [0, 2], "kei": [0, 1, 2, 3, 4, 5, 6, 7, 8], "dim": [0, 2], "cond_dim": [0, 2, 5], "depth": [0, 2], "block_dim": 0, "activ": [0, 2], "keyarrai": [0, 1, 2, 3], "prngkei": [0, 2, 3, 4, 5, 6, 7, 8], "int": [0, 1, 2, 3], "tupl": [0, 1], "extra": 0, "number": [0, 1, 2, 3], "hidden": [0, 2], "layer": [0, 2], "size": [0, 2, 3], "callabl": [0, 2, 3], "function": [0, 2, 3], "block_tanh": 0, "coupl": [0, 2], "1605": [0, 2], "08803": [0, 2], "untransformed_dim": 0, "nn_width": [0, 2], "nn_depth": [0, 2], "nn_activ": [0, 2], "_src": [0, 2, 5, 6], "custom_deriv": [0, 2], "custom_jvp": [0, 2], "object": [0, 1, 2, 3, 7], "parameteris": [0, 2], "condition": [0, 2], "neural": [0, 2], "netork": 0, "untransform": 0, "e": [0, 2, 3, 6, 8], "g": [0, 2, 3, 6, 8], "2": [0, 1, 2, 4, 5, 6, 7], "total": 0, "width": [0, 2], "jnn": [0, 2], "relu": [0, 2], "transformer_constructor": 0, "maskedautoregress": 0, "1705": [0, 2], "07057v4": [0, 2], "ensur": [0, 1], "an": [0, 1, 2, 3, 4], "structur": [0, 3], "ani": 0, "autoregressive_mlp": 0, "inv_scan_fn": 0, "init": [0, 2], "_": 0, "One": 0, "step": [0, 3, 4, 7], "tanh": [0, 2, 4], "exp": [0, 5, 7], "exponenti": 0, "forward": [0, 1, 2], "tanhlineartail": 0, "linear": [0, 2, 7], "tail": [0, 2], "beyond": [0, 2], "max_val": 0, "note": [0, 3, 6, 7], "due": 0, "thi": [0, 1, 3, 5, 7, 8], "doe": 0, "guarante": [0, 4], "constrain": [0, 2, 4], "encourag": 0, "within": [0, 2], "interv": [0, 4, 6], "subsequ": 0, "some": 0, "whilst": 0, "avoid": [0, 4, 8], "issu": [0, 4], "numer": [0, 4], "instabl": 0, "creat": [0, 4, 5, 6, 8, 9], "abov": 0, "below": 0, "which": [0, 1, 2, 3, 5, 7], "becom": 0, "linear_grad": 0, "intercept": 0, "chain": [0, 4], "togeth": 0, "arbitrari": [0, 6], "anoth": [0, 5], "sequenc": 0, "scan": 0, "repeatedli": 0, "same": 0, "differ": 0, "intern": 0, "lax": 0, "reduc": 0, "compil": 0, "time": [0, 1], "leav": 0, "lead": [0, 1, 2], "axi": [0, 6, 8], "over": [0, 1], "often": [0, 4, 8], "conveni": [0, 1, 3], "construct": 0, "For": [0, 1, 4, 6, 8], "complex": 0, "exampl": [0, 1, 3, 4, 5, 8], "equivil": 0, "p": [0, 5], "param": 0, "import": [0, 1, 4, 5, 6, 7, 8], "numpi": [0, 1, 4, 5, 6, 7], "jnp": [0, 1, 4, 5, 6, 7], "ones": [0, 1, 4, 6], "3": [0, 1, 2, 4, 5, 6, 7], "static": 0, "add": [0, 4], "new": 0, "batch_shap": [0, 1], "ad": 0, "multipl": 0, "applic": [0, 4], "vectorize_biject": 0, "dtype": [0, 6], "float32": [0, 6], "vectorize_condit": 0, "we": [0, 1, 2, 3, 4, 5, 6, 7, 8], "vector": [0, 7], "across": [0, 1], "In": [0, 1, 8], "case": [0, 5], "must": 0, "equal": [0, 4, 6], "see": [0, 3, 5, 6, 8], "each": [0, 1, 2, 3], "unchang": 0, "in_ax": 0, "multi_vmap": 0, "func": 0, "ndim": [0, 1], "vice": 0, "versa": 0, "preffer": 0, "faster": [0, 2, 7], "actual": 0, "train": [0, 4, 5, 6, 7, 8, 9], "flow": [0, 1, 3, 5, 6, 7, 8, 9], "want": [0, 3, 8], "densiti": [0, 1, 3, 4, 7, 9], "evalu": [0, 1, 6], "henc": 0, "achiev": [0, 8], "aim": 0, "flip": 0, "argument": [0, 1, 3], "permut": 0, "match": [0, 3], "order": 0, "flatten": 0, "c": [0, 7], "like": [0, 1], "inverse_permut": 0, "additivelinearcondit": 0, "w": [0, 7], "descript": 0, "partial": 0, "indic": 0, "idx": 0, "subset": 0, "index": 0, "integ": 0, "slice": 0, "ndarrai": 0, "portion": 0, "embedcondit": 0, "embed": 0, "dimension": [0, 4, 5], "return": [0, 1, 7], "ha": [0, 4], "raw": [0, 4], "embedding_net": 0, "raw_cond_shap": 0, "emb": 0, "rationalquadraticsplin": [0, 6], "ration": [0, 2], "quadrat": [0, 2], "spline": [0, 2, 6], "1906": 0, "04032": 0, "initialis": [0, 2], "ident": 0, "knot": [0, 2, 6], "min_deriv": 0, "001": 0, "softmax_adjust": 0, "01": [0, 4, 5], "float": [0, 2, 3], "minimum": [0, 1], "derviv": 0, "1e": [0, 4, 5, 6, 7], "control": 0, "bin": 0, "height": 0, "rescal": 0, "softmax": 0, "output": [0, 1], "adjust": 0, "averag": 0, "evenli": 0, "space": [0, 4], "promot": 0, "more": [0, 1, 4, 5, 6, 7, 8], "real_to_increasing_on_interv": 0, "concaten": 0, "along": 0, "alreadi": 0, "exist": 0, "analag": 0, "also": [0, 3, 4], "stack": [0, 2], "singl": [0, 1], "split_idx": 0, "list": [0, 6], "includ": [1, 3], "common": [1, 2], "denot": 1, "sampl": [1, 2, 3, 4, 5, 6, 7, 8], "correspond": [1, 3], "event_shap": 1, "torch": 1, "numpyro": 1, "similarli": 1, "dist": [1, 3], "zero": [1, 4, 5, 6], "_sampl": 1, "point": [1, 6, 7], "given": [1, 7], "_log_prob": 1, "probabl": 1, "handl": 1, "log_prob": [1, 2, 5, 6, 7], "perform": [1, 3, 5], "check": 1, "type": 1, "sample_shap": 1, "10": [1, 4, 5, 6], "cond_dist": 1, "particular": [1, 8], "5": [1, 2, 3, 4, 5, 6, 7, 8], "jr": [1, 3, 4, 5, 6, 7, 8], "random": [1, 2, 4, 5, 6, 7, 8], "sample_and_log_prob": [1, 7], "especi": 1, "effici": 1, "than": 1, "call": 1, "seper": 1, "refer": 1, "document": [1, 8], "inform": [1, 8], "length": 1, "cond_ndim": 1, "biject": [1, 2, 4, 6, 7, 8, 9], "take": [1, 3], "base_dist": [1, 2, 4, 5, 6, 7, 8], "standardnorm": [1, 7], "It": 1, "current": 1, "user": [1, 3], "respons": 1, "valid": [1, 3, 4], "entir": 1, "failur": 1, "mai": 1, "unexpect": 1, "result": [1, 8], "futur": 1, "version": [1, 2], "explicit": 1, "introduc": 1, "standard": [1, 6, 7], "independ": 1, "mean": [1, 6, 7, 8], "std": [1, 6, 8], "deviat": 1, "uniform": [1, 5, 7], "between": 1, "min": 1, "max": [1, 4, 5, 6], "minval": [1, 5], "maxval": [1, 5], "maximum": [1, 2, 3], "gumbel": 1, "en": 1, "wikipedia": 1, "wiki": 1, "gumbel_distribut": 1, "paramt": 1, "cauchi": 1, "cauchy_distribut": 1, "studentt": 1, "student": 1, "t": [1, 7], "27s_t": 1, "df": 1, "degre": 1, "freedom": 1, "premad": 2, "architetctur": 2, "couplingflow": 2, "flow_lay": 2, "8": [2, 6], "40": 2, "broadli": 2, "prioritis": [2, 7], "permute_strategi": 2, "maskedautoregressiveflow": [2, 4, 6, 7], "1606": 2, "04934": 2, "seed": 2, "_description_": 2, "blockneuralautoregressiveflow": [2, 5], "bnaf": 2, "nn_block_dim": 2, "access": 2, "onli": 2, "fit": [2, 3, 4, 7, 9], "likelihood": [2, 3, 7], "direct": 2, "variation": [2, 7], "triangularsplineflow": 2, "consist": 2, "befor": [2, 3], "tanh_max_v": 2, "variance_sc": 2, "local": 2, "featur": 2, "glorot_uniform": 2, "script": 3, "via": [3, 7], "target": [3, 4, 5, 8], "appropri": 3, "fit_to_data": [3, 4, 5, 6, 8], "max_epoch": [3, 4], "50": [3, 5, 6], "max_pati": [3, 4, 5], "batch_siz": [3, 8], "256": [3, 8], "val_prop": 3, "learning_r": [3, 4, 5, 6, 7], "0005": 3, "clip_norm": 3, "optim": 3, "filter_spec": [3, 8], "is_inexact_arrai": [3, 8], "show_progress": 3, "last": 3, "epoch": 3, "drop": 3, "truncat": 3, "consecut": 3, "loss": [3, 4, 5, 6, 7, 8], "improv": [3, 4], "after": [3, 8], "termin": 3, "proport": 3, "data": [3, 4, 5, 7], "set": [3, 5, 6, 7], "adam": 3, "learn": [3, 4, 5, 7], "rate": 3, "5e": [3, 4], "4": [3, 4, 5, 6, 7], "gradient": 3, "norm": [3, 7], "clip": 3, "occur": 3, "optax": 3, "gradienttransform": 3, "overrid": 3, "specifi": [3, 7], "trainabl": 3, "either": 3, "leaf": 3, "prefix": 3, "show": [3, 4, 5, 6, 7], "progress": 3, "bar": 3, "variat": [3, 9], "infer": [3, 5, 9], "illustr": 3, "how": [3, 5], "fit_to_variational_target": [3, 7], "loss_fn": 3, "elbo_loss": 3, "100": [3, 7], "samples_per_step": 3, "500": 3, "unnorm": 3, "found": [3, 5, 6, 7], "usual": [3, 8], "unorm": 3, "posterior": [3, 7], "map": [3, 4, 7], "scalar": 3, "run": 3, "accuraci": 4, "model": [4, 5], "By": 4, "prevent": 4, "leakag": 4, "assign": 4, "mass": 4, "region": 4, "outsid": 4, "downstream": 4, "induct": 4, "bia": 4, "make": 4, "easier": 4, "process": 4, "here": [4, 5, 6, 7], "involv": 4, "three": 4, "preprocess": [4, 8], "unbound": 4, "domain": 4, "back": [4, 5, 6, 7], "origin": [4, 7], "As": 4, "ll": 4, "two": [4, 5, 6], "beta": 4, "alpha": [4, 7], "ground": 4, "truth": 4, "x_i": [4, 5], "sim": [4, 5, 7], "text": [4, 5], "requir": [4, 5, 6], "librari": [4, 5, 6], "19": 4, "onp": [4, 5], "matplotlib": [4, 5, 6, 7], "pyplot": [4, 5, 6, 7], "plt": [4, 5, 6, 7], "toi": [4, 5, 6], "20": [4, 7], "x_kei": [4, 5, 7], "split": [4, 5, 6, 7, 8], "5000": 4, "much": 4, "its": 4, "boundari": 4, "choos": 4, "try": [4, 5], "suitabl": 4, "21": 4, "ep": 4, "7": [4, 7], "potenti": 4, "arctanh": 4, "x_preprocess": 4, "plot": [4, 7], "fig": [4, 6, 7], "subplot": [4, 6, 7], "ncol": [4, 6, 7], "k": 4, "v": 4, "zip": 4, "item": 4, "scatter": [4, 6, 7], "": [4, 5, 6, 7], "set_titl": [4, 6, 7], "set_aspect": [4, 6], "now": [4, 5, 6, 7], "22": 4, "subkei": [4, 5, 6], "untrained_flow": 4, "70": [4, 6], "44": [4, 5], "31": 4, "00": [4, 5, 6, 7], "05": [4, 7], "lt": [4, 5, 6, 7], "07": 4, "38it": 4, "val": [4, 5, 6], "09": [4, 5], "patienc": [4, 5, 6], "reach": [4, 5, 6], "comparison": [4, 7], "directli": 4, "23": 4, "naive_flow": 4, "46": 4, "32": 4, "06": 4, "83it": 4, "0899": 4, "00621": 4, "visualis": [4, 5, 7], "24": [4, 6], "naiv": 4, "sharex": 4, "sharei": 4, "set_xlim": [4, 6, 7], "set_ylim": [4, 6, 7], "although": 5, "avail": [5, 6], "consid": [5, 8], "limit": 5, "depend": 5, "u_i": 5, "quad": 5, "u": 5, "cond_kei": 5, "10000": [5, 6], "warn": [5, 6], "lib": [5, 6], "xla_bridg": [5, 6], "No": [5, 6, 7], "gpu": [5, 6, 7], "tpu": [5, 6, 7], "fall": [5, 6, 7], "cpu": [5, 6, 7], "tf_cpp_min_log_level": [5, 6, 7], "rerun": [5, 6, 7], "info": [5, 6, 7], "88": 5, "85it": 5, "27": 5, "47": 5, "let": 5, "expect": 5, "x_1": 5, "x_2": 5, "resolut": 5, "200": [5, 7], "test_u": 5, "xgrid": 5, "ygrid": 5, "meshgrid": [5, 7], "linspac": [5, 7], "xyinput": 5, "column_stack": 5, "reshap": [5, 7], "zgrid": 5, "contourf": 5, "level": [5, 7], "approxim": [6, 7], "moon": 6, "architectur": 6, "pleas": 6, "task": 6, "two_moon": 6, "dataset": 6, "n_sampl": [6, 7], "rng": 6, "could": [6, 8], "35": 6, "41it": 6, "55": 6, "57": 6, "five_point": 6, "6": [6, 7], "6872644": 6, "x_sampl": 6, "lim": 6, "tight_layout": 6, "simpl": 7, "1d": 7, "bayesian": 7, "regress": 7, "known": 7, "varianc": 7, "mathcal": 7, "n": 7, "w_0": 7, "w_1x": 7, "prior": 7, "w_1": 7, "scipi": 7, "stat": 7, "multivariate_norm": 7, "observ": 7, "data_kei": 7, "noise_kei": 7, "our": 7, "unnormalis": 7, "probabilit": 7, "def": 7, "unorm_posterior": 7, "logpdf": 7, "sum": 7, "loos": 7, "speak": 7, "instead": 7, "fast": [7, 8], "evid": 7, "bound": [7, 9], "elbo": 7, "flow_kei": 7, "train_kei": 7, "39": 7, "61it": 7, "29": 7, "contour": 7, "blue": 7, "red": 7, "plot_dens": 7, "density_fn": 7, "xmin": 7, "xmax": 7, "ymin": 7, "ymax": 7, "cmap": 7, "xvalu": 7, "yvalu": 7, "hstack": 7, "prob": 7, "extent": 7, "figsiz": 7, "9": 7, "dict": 7, "25": 7, "_x": 7, "vstack": 7, "ones_lik": 7, "full": 7, "design": 7, "cov": 7, "linalg": 7, "inv": 7, "dot": 7, "ey": 7, "true_posterior_log_prob": 7, "lambda": [7, 8], "theta": 7, "line": 7, "line2d": 7, "0x7f4e40675e10": 7, "gt": 7, "x_inspect": 7, "tab": 7, "green": 7, "orang": 7, "label": 7, "colour": 7, "sample_kei": 7, "ix": 7, "enumer": 7, "y_inspect": 7, "els": 7, "titl": 7, "legend": 7, "train_flow": 8, "follow": 8, "tree_util": 8, "jtu": 8, "tree_map": 8, "tree_at": 8, "tree": 8, "replac": 8, "about": 8, "filter": 8, "you": 8, "undo": 8, "x_process": 8, "sever": 8, "worth": 8, "slow": 8, "batch_kei": 8, "append": 8, "filter_jit": 8, "packag": 9, "pip": 9, "estmat": 9, "estim": 9, "faq": 9}, "objects": {"flowjax": [[0, 0, 0, "-", "bijections"], [1, 0, 0, "-", "distributions"], [2, 0, 0, "-", "flows"]], "flowjax.bijections": [[0, 1, 1, "", "AdditiveLinearCondition"], [0, 1, 1, "", "Affine"], [0, 1, 1, "", "Batch"], [0, 1, 1, "", "Bijection"], [0, 1, 1, "", "BlockAutoregressiveNetwork"], [0, 1, 1, "", "Chain"], [0, 1, 1, "", "Concatenate"], [0, 1, 1, "", "Coupling"], [0, 1, 1, "", "EmbedCondition"], [0, 1, 1, "", "Exp"], [0, 1, 1, "", "Flip"], [0, 1, 1, "", "Invert"], [0, 1, 1, "", "MaskedAutoregressive"], [0, 1, 1, "", "Partial"], [0, 1, 1, "", "Permute"], [0, 1, 1, "", "RationalQuadraticSpline"], [0, 1, 1, "", "Scan"], [0, 1, 1, "", "Stack"], [0, 1, 1, "", "Tanh"], [0, 1, 1, "", "TanhLinearTails"], [0, 1, 1, "", "TriangularAffine"]], "flowjax.bijections.AdditiveLinearCondition": [[0, 2, 1, "", "W"], [0, 3, 1, "", "__init__"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Affine": [[0, 3, 1, "", "__init__"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 2, 1, "", "loc"], [0, 2, 1, "", "log_scale"], [0, 4, 1, "", "scale"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Batch": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "batch_shape"], [0, 2, 1, "", "bijection"], [0, 2, 1, "", "in_axes"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "multi_vmap"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Bijection": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "cond_shape"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 2, 1, "", "shape"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.BlockAutoregressiveNetwork": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "activation"], [0, 2, 1, "", "block_dim"], [0, 2, 1, "", "depth"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 2, 1, "", "layers"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Chain": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "bijections"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Concatenate": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "axis"], [0, 2, 1, "", "bijections"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 2, 1, "", "split_idxs"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Coupling": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "conditioner"], [0, 2, 1, "", "dim"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"], [0, 2, 1, "", "transformer_constructor"], [0, 2, 1, "", "untransformed_dim"]], "flowjax.bijections.EmbedCondition": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "bijection"], [0, 2, 1, "", "embedding_net"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Exp": [[0, 3, 1, "", "__init__"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Flip": [[0, 3, 1, "", "__init__"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Invert": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "bijection"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.MaskedAutoregressive": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "autoregressive_mlp"], [0, 3, 1, "", "inv_scan_fn"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"], [0, 2, 1, "", "transformer_constructor"]], "flowjax.bijections.Partial": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "bijection"], [0, 2, 1, "", "idxs"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Permute": [[0, 3, 1, "", "__init__"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 2, 1, "", "inverse_permutation"], [0, 2, 1, "", "permutation"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.RationalQuadraticSpline": [[0, 3, 1, "", "__init__"]], "flowjax.bijections.Scan": [[0, 3, 1, "", "__init__"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 2, 1, "", "params"], [0, 2, 1, "", "static"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Stack": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "axis"], [0, 2, 1, "", "bijections"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.Tanh": [[0, 3, 1, "", "__init__"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.TanhLinearTails": [[0, 3, 1, "", "__init__"], [0, 2, 1, "", "intercept"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 2, 1, "", "linear_grad"], [0, 2, 1, "", "max_val"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"]], "flowjax.bijections.TriangularAffine": [[0, 3, 1, "", "__init__"], [0, 4, 1, "", "arr"], [0, 2, 1, "", "diag_idxs"], [0, 3, 1, "", "inverse"], [0, 3, 1, "", "inverse_and_log_det"], [0, 2, 1, "", "loc"], [0, 2, 1, "", "lower"], [0, 3, 1, "", "transform"], [0, 3, 1, "", "transform_and_log_det"], [0, 2, 1, "", "tri_mask"], [0, 2, 1, "", "weight_log_scale"]], "flowjax.distributions": [[1, 1, 1, "", "Cauchy"], [1, 1, 1, "", "Distribution"], [1, 1, 1, "", "Gumbel"], [1, 1, 1, "", "Normal"], [1, 1, 1, "", "StandardNormal"], [1, 1, 1, "", "StudentT"], [1, 1, 1, "", "Transformed"], [1, 1, 1, "", "Uniform"]], "flowjax.distributions.Cauchy": [[1, 3, 1, "", "__init__"], [1, 2, 1, "", "bijection"], [1, 4, 1, "", "loc"], [1, 4, 1, "", "scale"]], "flowjax.distributions.Distribution": [[1, 3, 1, "", "__init__"], [1, 4, 1, "", "cond_ndim"], [1, 2, 1, "", "cond_shape"], [1, 3, 1, "", "log_prob"], [1, 4, 1, "", "ndim"], [1, 3, 1, "", "sample"], [1, 3, 1, "", "sample_and_log_prob"], [1, 2, 1, "", "shape"]], "flowjax.distributions.Gumbel": [[1, 3, 1, "", "__init__"], [1, 2, 1, "", "bijection"], [1, 4, 1, "", "loc"], [1, 4, 1, "", "scale"]], "flowjax.distributions.Normal": [[1, 3, 1, "", "__init__"], [1, 2, 1, "", "bijection"], [1, 4, 1, "", "loc"], [1, 4, 1, "", "scale"]], "flowjax.distributions.StandardNormal": [[1, 3, 1, "", "__init__"]], "flowjax.distributions.StudentT": [[1, 3, 1, "", "__init__"], [1, 2, 1, "", "base_dist"], [1, 2, 1, "", "bijection"], [1, 4, 1, "", "df"], [1, 4, 1, "", "loc"], [1, 4, 1, "", "scale"]], "flowjax.distributions.Transformed": [[1, 3, 1, "", "__init__"], [1, 2, 1, "", "base_dist"], [1, 2, 1, "", "bijection"], [1, 2, 1, "", "cond_shape"]], "flowjax.distributions.Uniform": [[1, 3, 1, "", "__init__"], [1, 2, 1, "", "bijection"], [1, 4, 1, "", "maxval"], [1, 4, 1, "", "minval"]], "flowjax.flows": [[2, 1, 1, "", "BlockNeuralAutoregressiveFlow"], [2, 1, 1, "", "CouplingFlow"], [2, 1, 1, "", "MaskedAutoregressiveFlow"], [2, 1, 1, "", "TriangularSplineFlow"]], "flowjax.flows.BlockNeuralAutoregressiveFlow": [[2, 3, 1, "", "__init__"], [2, 2, 1, "", "flow_layers"], [2, 2, 1, "", "nn_block_dim"], [2, 2, 1, "", "nn_depth"], [2, 2, 1, "", "permute_strategy"]], "flowjax.flows.CouplingFlow": [[2, 3, 1, "", "__init__"], [2, 2, 1, "", "flow_layers"], [2, 2, 1, "", "nn_depth"], [2, 2, 1, "", "nn_width"], [2, 2, 1, "", "permute_strategy"]], "flowjax.flows.MaskedAutoregressiveFlow": [[2, 3, 1, "", "__init__"], [2, 2, 1, "", "flow_layers"], [2, 2, 1, "", "nn_depth"], [2, 2, 1, "", "nn_width"], [2, 2, 1, "", "permute_strategy"]], "flowjax.flows.TriangularSplineFlow": [[2, 3, 1, "", "__init__"], [2, 2, 1, "", "flow_layers"], [2, 2, 1, "", "knots"], [2, 2, 1, "", "permute_strategy"], [2, 2, 1, "", "tanh_max_val"]], "flowjax.train": [[3, 5, 1, "", "fit_to_data"], [3, 5, 1, "", "fit_to_variational_target"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"biject": 0, "distribut": 1, "flow": [2, 4], "train": 3, "bound": 4, "condit": 5, "densiti": [5, 6], "estim": 5, "uncondit": 6, "estmat": 6, "variat": 7, "infer": 7, "faq": 8, "freez": 8, "paramet": 8, "standardis": 8, "variabl": 8, "when": 8, "jit": 8, "flowjax": 9, "instal": 9, "exampl": 9, "api": 9, "miscellan": 9}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Bijections": [[0, "module-flowjax.bijections"]], "Distributions": [[1, "distributions"]], "Flows": [[2, "module-flowjax.flows"]], "Training": [[3, "training"]], "Bounded flows": [[4, "Bounded-flows"]], "Conditional density estimation": [[5, "Conditional-density-estimation"]], "Unconditional density estmation": [[6, "Unconditional-density-estmation"]], "Variational inference": [[7, "Variational-inference"]], "FAQ": [[8, "faq"]], "Freezing parameters": [[8, "freezing-parameters"]], "Standardising variables": [[8, "standardising-variables"]], "When to JIT": [[8, "when-to-jit"]], "FlowJax": [[9, "flowjax"]], "Installation": [[9, "installation"]], "Examples": [[9, null]], "API": [[9, null]], "Miscellaneous": [[9, null]]}, "indexentries": {"additivelinearcondition (class in flowjax.bijections)": [[0, "flowjax.bijections.AdditiveLinearCondition"]], "affine (class in flowjax.bijections)": [[0, "flowjax.bijections.Affine"]], "batch (class in flowjax.bijections)": [[0, "flowjax.bijections.Batch"]], "bijection (class in flowjax.bijections)": [[0, "flowjax.bijections.Bijection"]], "blockautoregressivenetwork (class in flowjax.bijections)": [[0, "flowjax.bijections.BlockAutoregressiveNetwork"]], "chain (class in flowjax.bijections)": [[0, "flowjax.bijections.Chain"]], "concatenate (class in flowjax.bijections)": [[0, "flowjax.bijections.Concatenate"]], "coupling (class in flowjax.bijections)": [[0, "flowjax.bijections.Coupling"]], "embedcondition (class in flowjax.bijections)": [[0, "flowjax.bijections.EmbedCondition"]], "exp (class in flowjax.bijections)": [[0, "flowjax.bijections.Exp"]], "flip (class in flowjax.bijections)": [[0, "flowjax.bijections.Flip"]], "invert (class in flowjax.bijections)": [[0, "flowjax.bijections.Invert"]], "maskedautoregressive (class in flowjax.bijections)": [[0, "flowjax.bijections.MaskedAutoregressive"]], "partial (class in flowjax.bijections)": [[0, "flowjax.bijections.Partial"]], "permute (class in flowjax.bijections)": [[0, "flowjax.bijections.Permute"]], "rationalquadraticspline (class in flowjax.bijections)": [[0, "flowjax.bijections.RationalQuadraticSpline"]], "scan (class in flowjax.bijections)": [[0, "flowjax.bijections.Scan"]], "stack (class in flowjax.bijections)": [[0, "flowjax.bijections.Stack"]], "tanh (class in flowjax.bijections)": [[0, "flowjax.bijections.Tanh"]], "tanhlineartails (class in flowjax.bijections)": [[0, "flowjax.bijections.TanhLinearTails"]], "triangularaffine (class in flowjax.bijections)": [[0, "flowjax.bijections.TriangularAffine"]], "w (additivelinearcondition attribute)": [[0, "flowjax.bijections.AdditiveLinearCondition.W"]], "__init__() (additivelinearcondition method)": [[0, "flowjax.bijections.AdditiveLinearCondition.__init__"]], "__init__() (affine method)": [[0, "flowjax.bijections.Affine.__init__"]], "__init__() (batch method)": [[0, "flowjax.bijections.Batch.__init__"]], "__init__() (bijection method)": [[0, "flowjax.bijections.Bijection.__init__"]], "__init__() (blockautoregressivenetwork method)": [[0, "flowjax.bijections.BlockAutoregressiveNetwork.__init__"]], "__init__() (chain method)": [[0, "flowjax.bijections.Chain.__init__"]], "__init__() (concatenate method)": [[0, "flowjax.bijections.Concatenate.__init__"]], "__init__() (coupling method)": [[0, "flowjax.bijections.Coupling.__init__"]], "__init__() (embedcondition method)": [[0, "flowjax.bijections.EmbedCondition.__init__"]], "__init__() (exp method)": [[0, "flowjax.bijections.Exp.__init__"]], "__init__() (flip method)": [[0, "flowjax.bijections.Flip.__init__"]], "__init__() (invert method)": [[0, "flowjax.bijections.Invert.__init__"]], "__init__() (maskedautoregressive method)": [[0, "flowjax.bijections.MaskedAutoregressive.__init__"]], "__init__() (partial method)": [[0, "flowjax.bijections.Partial.__init__"]], "__init__() (permute method)": [[0, "flowjax.bijections.Permute.__init__"]], "__init__() (rationalquadraticspline method)": [[0, "flowjax.bijections.RationalQuadraticSpline.__init__"]], "__init__() (scan method)": [[0, "flowjax.bijections.Scan.__init__"]], "__init__() (stack method)": [[0, "flowjax.bijections.Stack.__init__"]], "__init__() (tanh method)": [[0, "flowjax.bijections.Tanh.__init__"]], "__init__() (tanhlineartails method)": [[0, "flowjax.bijections.TanhLinearTails.__init__"]], "__init__() (triangularaffine method)": [[0, "flowjax.bijections.TriangularAffine.__init__"]], "activation (blockautoregressivenetwork attribute)": [[0, "flowjax.bijections.BlockAutoregressiveNetwork.activation"]], "arr (triangularaffine property)": [[0, "flowjax.bijections.TriangularAffine.arr"]], "autoregressive_mlp (maskedautoregressive attribute)": [[0, "flowjax.bijections.MaskedAutoregressive.autoregressive_mlp"]], "axis (concatenate attribute)": [[0, "flowjax.bijections.Concatenate.axis"]], "axis (stack attribute)": [[0, "flowjax.bijections.Stack.axis"]], "batch_shape (batch attribute)": [[0, "flowjax.bijections.Batch.batch_shape"]], "bijection (batch attribute)": [[0, "flowjax.bijections.Batch.bijection"]], "bijection (embedcondition attribute)": [[0, "flowjax.bijections.EmbedCondition.bijection"]], "bijection (invert attribute)": [[0, "flowjax.bijections.Invert.bijection"]], "bijection (partial attribute)": [[0, "flowjax.bijections.Partial.bijection"]], "bijections (chain attribute)": [[0, "flowjax.bijections.Chain.bijections"]], "bijections (concatenate attribute)": [[0, "flowjax.bijections.Concatenate.bijections"]], "bijections (stack attribute)": [[0, "flowjax.bijections.Stack.bijections"]], "block_dim (blockautoregressivenetwork attribute)": [[0, "flowjax.bijections.BlockAutoregressiveNetwork.block_dim"]], "cond_shape (bijection attribute)": [[0, "flowjax.bijections.Bijection.cond_shape"]], "conditioner (coupling attribute)": [[0, "flowjax.bijections.Coupling.conditioner"]], "depth (blockautoregressivenetwork attribute)": [[0, "flowjax.bijections.BlockAutoregressiveNetwork.depth"]], "diag_idxs (triangularaffine attribute)": [[0, "flowjax.bijections.TriangularAffine.diag_idxs"]], "dim (coupling attribute)": [[0, "flowjax.bijections.Coupling.dim"]], "embedding_net (embedcondition attribute)": [[0, "flowjax.bijections.EmbedCondition.embedding_net"]], "flowjax.bijections": [[0, "module-flowjax.bijections"]], "idxs (partial attribute)": [[0, "flowjax.bijections.Partial.idxs"]], "in_axes (batch attribute)": [[0, "flowjax.bijections.Batch.in_axes"]], "intercept (tanhlineartails attribute)": [[0, "flowjax.bijections.TanhLinearTails.intercept"]], "inv_scan_fn() (maskedautoregressive method)": [[0, "flowjax.bijections.MaskedAutoregressive.inv_scan_fn"]], "inverse() (additivelinearcondition method)": [[0, "flowjax.bijections.AdditiveLinearCondition.inverse"]], "inverse() (affine method)": [[0, "flowjax.bijections.Affine.inverse"]], "inverse() (batch method)": [[0, "flowjax.bijections.Batch.inverse"]], "inverse() (bijection method)": [[0, "flowjax.bijections.Bijection.inverse"]], "inverse() (blockautoregressivenetwork method)": [[0, "flowjax.bijections.BlockAutoregressiveNetwork.inverse"]], "inverse() (chain method)": [[0, "flowjax.bijections.Chain.inverse"]], "inverse() (concatenate method)": [[0, "flowjax.bijections.Concatenate.inverse"]], "inverse() (coupling method)": [[0, "flowjax.bijections.Coupling.inverse"]], "inverse() (embedcondition method)": [[0, "flowjax.bijections.EmbedCondition.inverse"]], "inverse() (exp method)": [[0, "flowjax.bijections.Exp.inverse"]], "inverse() (flip method)": [[0, "flowjax.bijections.Flip.inverse"]], "inverse() (invert method)": [[0, "flowjax.bijections.Invert.inverse"]], "inverse() (maskedautoregressive method)": [[0, "flowjax.bijections.MaskedAutoregressive.inverse"]], "inverse() (partial method)": [[0, "flowjax.bijections.Partial.inverse"]], "inverse() (permute method)": [[0, "flowjax.bijections.Permute.inverse"]], "inverse() (scan method)": [[0, "flowjax.bijections.Scan.inverse"]], "inverse() (stack method)": [[0, "flowjax.bijections.Stack.inverse"]], "inverse() (tanh method)": [[0, "flowjax.bijections.Tanh.inverse"]], "inverse() (tanhlineartails method)": [[0, "flowjax.bijections.TanhLinearTails.inverse"]], "inverse() (triangularaffine method)": [[0, "flowjax.bijections.TriangularAffine.inverse"]], "inverse_and_log_det() (additivelinearcondition method)": [[0, "flowjax.bijections.AdditiveLinearCondition.inverse_and_log_det"]], "inverse_and_log_det() (affine method)": [[0, "flowjax.bijections.Affine.inverse_and_log_det"]], "inverse_and_log_det() (batch method)": [[0, "flowjax.bijections.Batch.inverse_and_log_det"]], "inverse_and_log_det() (bijection method)": [[0, "flowjax.bijections.Bijection.inverse_and_log_det"]], "inverse_and_log_det() (blockautoregressivenetwork method)": [[0, "flowjax.bijections.BlockAutoregressiveNetwork.inverse_and_log_det"]], "inverse_and_log_det() (chain method)": [[0, "flowjax.bijections.Chain.inverse_and_log_det"]], "inverse_and_log_det() (concatenate method)": [[0, "flowjax.bijections.Concatenate.inverse_and_log_det"]], "inverse_and_log_det() (coupling method)": [[0, "flowjax.bijections.Coupling.inverse_and_log_det"]], "inverse_and_log_det() (embedcondition method)": [[0, "flowjax.bijections.EmbedCondition.inverse_and_log_det"]], "inverse_and_log_det() (exp method)": [[0, "flowjax.bijections.Exp.inverse_and_log_det"]], "inverse_and_log_det() (flip method)": [[0, "flowjax.bijections.Flip.inverse_and_log_det"]], "inverse_and_log_det() (invert method)": [[0, "flowjax.bijections.Invert.inverse_and_log_det"]], "inverse_and_log_det() (maskedautoregressive method)": [[0, "flowjax.bijections.MaskedAutoregressive.inverse_and_log_det"]], "inverse_and_log_det() (partial method)": [[0, "flowjax.bijections.Partial.inverse_and_log_det"]], "inverse_and_log_det() (permute method)": [[0, "flowjax.bijections.Permute.inverse_and_log_det"]], "inverse_and_log_det() (scan method)": [[0, "flowjax.bijections.Scan.inverse_and_log_det"]], "inverse_and_log_det() (stack method)": [[0, "flowjax.bijections.Stack.inverse_and_log_det"]], "inverse_and_log_det() (tanh method)": [[0, "flowjax.bijections.Tanh.inverse_and_log_det"]], "inverse_and_log_det() (tanhlineartails method)": [[0, "flowjax.bijections.TanhLinearTails.inverse_and_log_det"]], "inverse_and_log_det() (triangularaffine method)": [[0, "flowjax.bijections.TriangularAffine.inverse_and_log_det"]], "inverse_permutation (permute attribute)": [[0, "flowjax.bijections.Permute.inverse_permutation"]], "layers (blockautoregressivenetwork attribute)": [[0, "flowjax.bijections.BlockAutoregressiveNetwork.layers"]], "linear_grad (tanhlineartails attribute)": [[0, "flowjax.bijections.TanhLinearTails.linear_grad"]], "loc (affine attribute)": [[0, "flowjax.bijections.Affine.loc"]], "loc (triangularaffine attribute)": [[0, "flowjax.bijections.TriangularAffine.loc"]], "log_scale (affine attribute)": [[0, "flowjax.bijections.Affine.log_scale"]], "lower (triangularaffine attribute)": [[0, "flowjax.bijections.TriangularAffine.lower"]], "max_val (tanhlineartails attribute)": [[0, "flowjax.bijections.TanhLinearTails.max_val"]], "module": [[0, "module-flowjax.bijections"], [1, "module-flowjax.distributions"], [2, "module-flowjax.flows"]], "multi_vmap() (batch method)": [[0, "flowjax.bijections.Batch.multi_vmap"]], "params (scan attribute)": [[0, "flowjax.bijections.Scan.params"]], "permutation (permute attribute)": [[0, "flowjax.bijections.Permute.permutation"]], "scale (affine property)": [[0, "flowjax.bijections.Affine.scale"]], "shape (bijection attribute)": [[0, "flowjax.bijections.Bijection.shape"]], "split_idxs (concatenate attribute)": [[0, "flowjax.bijections.Concatenate.split_idxs"]], "static (scan attribute)": [[0, "flowjax.bijections.Scan.static"]], "transform() (additivelinearcondition method)": [[0, "flowjax.bijections.AdditiveLinearCondition.transform"]], "transform() (affine method)": [[0, "flowjax.bijections.Affine.transform"]], "transform() (batch method)": [[0, "flowjax.bijections.Batch.transform"]], "transform() (bijection method)": [[0, "flowjax.bijections.Bijection.transform"]], "transform() (blockautoregressivenetwork method)": [[0, "flowjax.bijections.BlockAutoregressiveNetwork.transform"]], "transform() (chain method)": [[0, "flowjax.bijections.Chain.transform"]], "transform() (concatenate method)": [[0, "flowjax.bijections.Concatenate.transform"]], "transform() (coupling method)": [[0, "flowjax.bijections.Coupling.transform"]], "transform() (embedcondition method)": [[0, "flowjax.bijections.EmbedCondition.transform"]], "transform() (exp method)": [[0, "flowjax.bijections.Exp.transform"]], "transform() (flip method)": [[0, "flowjax.bijections.Flip.transform"]], "transform() (invert method)": [[0, "flowjax.bijections.Invert.transform"]], "transform() (maskedautoregressive method)": [[0, "flowjax.bijections.MaskedAutoregressive.transform"]], "transform() (partial method)": [[0, "flowjax.bijections.Partial.transform"]], "transform() (permute method)": [[0, "flowjax.bijections.Permute.transform"]], "transform() (scan method)": [[0, "flowjax.bijections.Scan.transform"]], "transform() (stack method)": [[0, "flowjax.bijections.Stack.transform"]], "transform() (tanh method)": [[0, "flowjax.bijections.Tanh.transform"]], "transform() (tanhlineartails method)": [[0, "flowjax.bijections.TanhLinearTails.transform"]], "transform() (triangularaffine method)": [[0, "flowjax.bijections.TriangularAffine.transform"]], "transform_and_log_det() (additivelinearcondition method)": [[0, "flowjax.bijections.AdditiveLinearCondition.transform_and_log_det"]], "transform_and_log_det() (affine method)": [[0, "flowjax.bijections.Affine.transform_and_log_det"]], "transform_and_log_det() (batch method)": [[0, "flowjax.bijections.Batch.transform_and_log_det"]], "transform_and_log_det() (bijection method)": [[0, "flowjax.bijections.Bijection.transform_and_log_det"]], "transform_and_log_det() (blockautoregressivenetwork method)": [[0, "flowjax.bijections.BlockAutoregressiveNetwork.transform_and_log_det"]], "transform_and_log_det() (chain method)": [[0, "flowjax.bijections.Chain.transform_and_log_det"]], "transform_and_log_det() (concatenate method)": [[0, "flowjax.bijections.Concatenate.transform_and_log_det"]], "transform_and_log_det() (coupling method)": [[0, "flowjax.bijections.Coupling.transform_and_log_det"]], "transform_and_log_det() (embedcondition method)": [[0, "flowjax.bijections.EmbedCondition.transform_and_log_det"]], "transform_and_log_det() (exp method)": [[0, "flowjax.bijections.Exp.transform_and_log_det"]], "transform_and_log_det() (flip method)": [[0, "flowjax.bijections.Flip.transform_and_log_det"]], "transform_and_log_det() (invert method)": [[0, "flowjax.bijections.Invert.transform_and_log_det"]], "transform_and_log_det() (maskedautoregressive method)": [[0, "flowjax.bijections.MaskedAutoregressive.transform_and_log_det"]], "transform_and_log_det() (partial method)": [[0, "flowjax.bijections.Partial.transform_and_log_det"]], "transform_and_log_det() (permute method)": [[0, "flowjax.bijections.Permute.transform_and_log_det"]], "transform_and_log_det() (scan method)": [[0, "flowjax.bijections.Scan.transform_and_log_det"]], "transform_and_log_det() (stack method)": [[0, "flowjax.bijections.Stack.transform_and_log_det"]], "transform_and_log_det() (tanh method)": [[0, "flowjax.bijections.Tanh.transform_and_log_det"]], "transform_and_log_det() (tanhlineartails method)": [[0, "flowjax.bijections.TanhLinearTails.transform_and_log_det"]], "transform_and_log_det() (triangularaffine method)": [[0, "flowjax.bijections.TriangularAffine.transform_and_log_det"]], "transformer_constructor (coupling attribute)": [[0, "flowjax.bijections.Coupling.transformer_constructor"]], "transformer_constructor (maskedautoregressive attribute)": [[0, "flowjax.bijections.MaskedAutoregressive.transformer_constructor"]], "tri_mask (triangularaffine attribute)": [[0, "flowjax.bijections.TriangularAffine.tri_mask"]], "untransformed_dim (coupling attribute)": [[0, "flowjax.bijections.Coupling.untransformed_dim"]], "weight_log_scale (triangularaffine attribute)": [[0, "flowjax.bijections.TriangularAffine.weight_log_scale"]], "cauchy (class in flowjax.distributions)": [[1, "flowjax.distributions.Cauchy"]], "distribution (class in flowjax.distributions)": [[1, "flowjax.distributions.Distribution"]], "gumbel (class in flowjax.distributions)": [[1, "flowjax.distributions.Gumbel"]], "normal (class in flowjax.distributions)": [[1, "flowjax.distributions.Normal"]], "standardnormal (class in flowjax.distributions)": [[1, "flowjax.distributions.StandardNormal"]], "studentt (class in flowjax.distributions)": [[1, "flowjax.distributions.StudentT"]], "transformed (class in flowjax.distributions)": [[1, "flowjax.distributions.Transformed"]], "uniform (class in flowjax.distributions)": [[1, "flowjax.distributions.Uniform"]], "__init__() (cauchy method)": [[1, "flowjax.distributions.Cauchy.__init__"]], "__init__() (distribution method)": [[1, "flowjax.distributions.Distribution.__init__"]], "__init__() (gumbel method)": [[1, "flowjax.distributions.Gumbel.__init__"]], "__init__() (normal method)": [[1, "flowjax.distributions.Normal.__init__"]], "__init__() (standardnormal method)": [[1, "flowjax.distributions.StandardNormal.__init__"]], "__init__() (studentt method)": [[1, "flowjax.distributions.StudentT.__init__"]], "__init__() (transformed method)": [[1, "flowjax.distributions.Transformed.__init__"]], "__init__() (uniform method)": [[1, "flowjax.distributions.Uniform.__init__"]], "base_dist (studentt attribute)": [[1, "flowjax.distributions.StudentT.base_dist"]], "base_dist (transformed attribute)": [[1, "flowjax.distributions.Transformed.base_dist"]], "bijection (cauchy attribute)": [[1, "flowjax.distributions.Cauchy.bijection"]], "bijection (gumbel attribute)": [[1, "flowjax.distributions.Gumbel.bijection"]], "bijection (normal attribute)": [[1, "flowjax.distributions.Normal.bijection"]], "bijection (studentt attribute)": [[1, "flowjax.distributions.StudentT.bijection"]], "bijection (transformed attribute)": [[1, "flowjax.distributions.Transformed.bijection"]], "bijection (uniform attribute)": [[1, "flowjax.distributions.Uniform.bijection"]], "cond_ndim (distribution property)": [[1, "flowjax.distributions.Distribution.cond_ndim"]], "cond_shape (distribution attribute)": [[1, "flowjax.distributions.Distribution.cond_shape"]], "cond_shape (transformed attribute)": [[1, "flowjax.distributions.Transformed.cond_shape"]], "df (studentt property)": [[1, "flowjax.distributions.StudentT.df"]], "flowjax.distributions": [[1, "module-flowjax.distributions"]], "loc (cauchy property)": [[1, "flowjax.distributions.Cauchy.loc"]], "loc (gumbel property)": [[1, "flowjax.distributions.Gumbel.loc"]], "loc (normal property)": [[1, "flowjax.distributions.Normal.loc"]], "loc (studentt property)": [[1, "flowjax.distributions.StudentT.loc"]], "log_prob() (distribution method)": [[1, "flowjax.distributions.Distribution.log_prob"]], "maxval (uniform property)": [[1, "flowjax.distributions.Uniform.maxval"]], "minval (uniform property)": [[1, "flowjax.distributions.Uniform.minval"]], "ndim (distribution property)": [[1, "flowjax.distributions.Distribution.ndim"]], "sample() (distribution method)": [[1, "flowjax.distributions.Distribution.sample"]], "sample_and_log_prob() (distribution method)": [[1, "flowjax.distributions.Distribution.sample_and_log_prob"]], "scale (cauchy property)": [[1, "flowjax.distributions.Cauchy.scale"]], "scale (gumbel property)": [[1, "flowjax.distributions.Gumbel.scale"]], "scale (normal property)": [[1, "flowjax.distributions.Normal.scale"]], "scale (studentt property)": [[1, "flowjax.distributions.StudentT.scale"]], "shape (distribution attribute)": [[1, "flowjax.distributions.Distribution.shape"]], "blockneuralautoregressiveflow (class in flowjax.flows)": [[2, "flowjax.flows.BlockNeuralAutoregressiveFlow"]], "couplingflow (class in flowjax.flows)": [[2, "flowjax.flows.CouplingFlow"]], "maskedautoregressiveflow (class in flowjax.flows)": [[2, "flowjax.flows.MaskedAutoregressiveFlow"]], "triangularsplineflow (class in flowjax.flows)": [[2, "flowjax.flows.TriangularSplineFlow"]], "__init__() (blockneuralautoregressiveflow method)": [[2, "flowjax.flows.BlockNeuralAutoregressiveFlow.__init__"]], "__init__() (couplingflow method)": [[2, "flowjax.flows.CouplingFlow.__init__"]], "__init__() (maskedautoregressiveflow method)": [[2, "flowjax.flows.MaskedAutoregressiveFlow.__init__"]], "__init__() (triangularsplineflow method)": [[2, "flowjax.flows.TriangularSplineFlow.__init__"]], "flow_layers (blockneuralautoregressiveflow attribute)": [[2, "flowjax.flows.BlockNeuralAutoregressiveFlow.flow_layers"]], "flow_layers (couplingflow attribute)": [[2, "flowjax.flows.CouplingFlow.flow_layers"]], "flow_layers (maskedautoregressiveflow attribute)": [[2, "flowjax.flows.MaskedAutoregressiveFlow.flow_layers"]], "flow_layers (triangularsplineflow attribute)": [[2, "flowjax.flows.TriangularSplineFlow.flow_layers"]], "flowjax.flows": [[2, "module-flowjax.flows"]], "knots (triangularsplineflow attribute)": [[2, "flowjax.flows.TriangularSplineFlow.knots"]], "nn_block_dim (blockneuralautoregressiveflow attribute)": [[2, "flowjax.flows.BlockNeuralAutoregressiveFlow.nn_block_dim"]], "nn_depth (blockneuralautoregressiveflow attribute)": [[2, "flowjax.flows.BlockNeuralAutoregressiveFlow.nn_depth"]], "nn_depth (couplingflow attribute)": [[2, "flowjax.flows.CouplingFlow.nn_depth"]], "nn_depth (maskedautoregressiveflow attribute)": [[2, "flowjax.flows.MaskedAutoregressiveFlow.nn_depth"]], "nn_width (couplingflow attribute)": [[2, "flowjax.flows.CouplingFlow.nn_width"]], "nn_width (maskedautoregressiveflow attribute)": [[2, "flowjax.flows.MaskedAutoregressiveFlow.nn_width"]], "permute_strategy (blockneuralautoregressiveflow attribute)": [[2, "flowjax.flows.BlockNeuralAutoregressiveFlow.permute_strategy"]], "permute_strategy (couplingflow attribute)": [[2, "flowjax.flows.CouplingFlow.permute_strategy"]], "permute_strategy (maskedautoregressiveflow attribute)": [[2, "flowjax.flows.MaskedAutoregressiveFlow.permute_strategy"]], "permute_strategy (triangularsplineflow attribute)": [[2, "flowjax.flows.TriangularSplineFlow.permute_strategy"]], "tanh_max_val (triangularsplineflow attribute)": [[2, "flowjax.flows.TriangularSplineFlow.tanh_max_val"]], "fit_to_data() (in module flowjax.train)": [[3, "flowjax.train.fit_to_data"]], "fit_to_variational_target() (in module flowjax.train)": [[3, "flowjax.train.fit_to_variational_target"]]}})